#!/usr/bin/env bash
set -euo pipefail
ROOT="/root/stockbot"
ENV="$ROOT/.env.local"
TOKEN="7791660338:AAFg6u0B38wYeBVZkwavbQowU-1CibsDUes"

echo "‚Äî –ü–∏—à—É TELEGRAM_TOKEN –≤ $ENV"
mkdir -p "$ROOT"
touch "$ENV"
umask 177
# —É–±—Ä–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Å—Ç—Ä–æ–∫–∏
grep -vE '^(TELEGRAM_TOKEN|TELEGRAM_CHAT_ID_MAIN|TELEGRAM_CHAT_ID_ALT)=' "$ENV" > "$ENV.tmp" || true
mv "$ENV.tmp" "$ENV"
printf 'TELEGRAM_TOKEN="%s"\n' "$TOKEN" >> "$ENV"
# —Å–æ—Ö—Ä–∞–Ω–∏–º ALT –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤ (–µ—Å–ª–∏ –Ω–∞–¥–æ ‚Äî –ø–æ–º–µ–Ω—è–µ—à—å)
echo 'TELEGRAM_CHAT_ID_ALT="110181893"' >> "$ENV"
chmod 600 "$ENV"

echo "‚Äî –ü—Ä–æ–≤–µ—Ä—è—é getMe‚Ä¶"
curl -sS "https://api.telegram.org/bot${TOKEN}/getMe" | jq .

echo "‚Äî –ò—â—É chat_id —á–µ—Ä–µ–∑ getUpdates (–Ω—É–∂–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω /start –±–æ—Ç—É)‚Ä¶"
CID=$(curl -sS "https://api.telegram.org/bot${TOKEN}/getUpdates?limit=10" \
  | jq -r '[.result[]?|(.message//.channel_post//{})|select(.chat and .chat.id)|.chat.id][-1] // empty')

if [ -n "$CID" ]; then
  echo "‚úì –ù–∞–π–¥–µ–Ω chat_id: $CID ‚Äî —Å–æ—Ö—Ä–∞–Ω—è—é TELEGRAM_CHAT_ID_MAIN"
  printf 'TELEGRAM_CHAT_ID_MAIN="%s"\n' "$CID" >> "$ENV"
else
  echo "‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω chat_id –≤ getUpdates."
  echo "   –û—Ç–∫—Ä–æ–π –≤ Telegram —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–º—É /start, –∑–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä–∏: sudo /root/stockbot/tools/tg_fix.sh"
fi

source "$ENV"

if [ -n "${TELEGRAM_CHAT_ID_MAIN:-}" ]; then
  echo "‚Äî –®–ª—é —Ç–µ—Å—Ç –≤ MAIN ($TELEGRAM_CHAT_ID_MAIN)‚Ä¶"
  curl -sS -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
    -d chat_id="${TELEGRAM_CHAT_ID_MAIN}" \
    -d text="üîî Elios: —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (fix)" | jq .
fi

# –ß–µ—Å—Ç–Ω—ã–π –º–æ–¥—É–ª—å –æ—Ç–ø—Ä–∞–≤–∫–∏ (OK/FAIL –ø–æ —Ñ–∞–∫—Ç—É –æ—Ç–≤–µ—Ç–∞ Telegram)
cat > "$ROOT/core/utils/telegram.py" <<'PY'
# -*- coding: utf-8 -*-
import os, json, urllib.request, urllib.parse
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN", "")
TELEGRAM_CHAT_ID_MAIN = os.getenv("TELEGRAM_CHAT_ID_MAIN", "")
TELEGRAM_CHAT_ID_ALT  = os.getenv("TELEGRAM_CHAT_ID_ALT", "")
TIMEOUT = 10

def _api(method, params=None, get=False):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/{method}"
    if get:
        if params: url += "?" + urllib.parse.urlencode(params)
        req = urllib.request.Request(url, headers={"User-Agent": "EliosTG/1.0"})
    else:
        data = urllib.parse.urlencode(params or {}).encode()
        req = urllib.request.Request(url, data=data, headers={"User-Agent": "EliosTG/1.0"})
    with urllib.request.urlopen(req, timeout=TIMEOUT) as r:
        return json.loads(r.read().decode("utf-8"))

def _try_send(cid, text):
    try:
        js = _api("sendMessage", {"chat_id": str(cid), "text": text, "disable_web_page_preview":"1"})
        return bool(js.get("ok")), js
    except Exception as e:
        return False, {"ok": False, "error": str(e)}

def send_message(text, chat_id=None):
    # 1) —è–≤–Ω—ã–π cid -> MAIN -> ALT
    for cid in [chat_id, TELEGRAM_CHAT_ID_MAIN, TELEGRAM_CHAT_ID_ALT]:
        if not cid: continue
        ok, js = _try_send(cid, text)
        if ok:
            print(f"‚úÖ Telegram OK -> {cid}")
            return True
    # 2) autodiscover –∏–∑ getUpdates (–µ—Å–ª–∏ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –±–æ—Ç—É —Ö–æ—Ç—è –±—ã /start)
    try:
        upd = _api("getUpdates", {"limit":"10"}, get=True)
        for u in reversed(upd.get("result", [])):
            chat = (u.get("message") or u.get("channel_post") or {}).get("chat")
            if chat and "id" in chat:
                cid = chat["id"]
                ok, js = _try_send(cid, text)
                if ok:
                    # –ó–∞–ø–∏—à–µ–º MAIN –Ω–∞ –±—É–¥—É—â–µ–µ
                    try:
                        env="/root/stockbot/.env.local"
                        content=open(env,"r",encoding="utf-8",errors="ignore").read() if os.path.exists(env) else ""
                        lines=[l for l in content.splitlines() if not l.startswith("TELEGRAM_CHAT_ID_MAIN=")]
                        lines.append(f'TELEGRAM_CHAT_ID_MAIN="{cid}"')
                        open(env,"w",encoding="utf-8").write("\n".join(lines)+"\n")
                        os.chmod(env,0o600)
                    except Exception:
                        pass
                    print(f"‚úÖ Telegram DISCOVERED -> {cid}")
                    return True
    except Exception:
        pass
    print("‚ùå Telegram FAIL (–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ chat_id –∏–ª–∏ –±–æ—Ç –Ω–µ –ø–æ–ª—É—á–∏–ª /start)")
    return False

# —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
def notify(text): return send_message(text)
def send(text, chat_id=None): return send_message(text, chat_id=chat_id)
PY

chmod 644 "$ROOT/core/utils/telegram.py"

echo "‚Äî –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –ª—É–ø –∏ –ø–æ–∫–∞–∑—ã–≤–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏"
sudo systemctl daemon-reload
sudo systemctl restart elios-loop.service
journalctl -u elios-loop.service -n 80 --no-pager
