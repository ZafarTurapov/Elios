# core/training/merge_with_labels.py

import json

import pandas as pd
from tqdm import tqdm

CLEANED_PATH = "data/merged_sp500_fundamentals_clean.csv"
TRAINING_DATA_PATH = "core/trading/training_data.json"
OUTPUT_PATH = "data/fundamentals_with_labels.csv"


def merge_with_labels():
    print(f"üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –±–æ–µ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é: {TRAINING_DATA_PATH}...")
    with open(TRAINING_DATA_PATH, "r") as f:
        training_data = json.load(f)

    print(f"üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–∞—Ç—á–∞–º–∏ –∏–∑ {CLEANED_PATH}...")
    merged_rows = []
    for chunk in pd.read_csv(CLEANED_PATH, chunksize=50000):
        for trade in tqdm(training_data[:], desc="üìå –ú–µ—Ä–∂–∏–º"):
            symbol = trade["symbol"].upper()
            try:
                year = int(trade["timestamp_exit"][:4])
            except Exception:
                continue

            df = chunk.copy()
            df_filtered = df[df["symbol"].str.upper() == symbol]

            # ‚õîÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–æ: —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≥–æ–¥—É
            # df_filtered = df_filtered[df_filtered["year"] == year]

            if df_filtered.empty:
                continue

            df_filtered = df_filtered.copy()
            df_filtered["label_profit_share"] = trade["change_pct"]
            merged_rows.append(df_filtered)

    if merged_rows:
        merged_df = pd.concat(merged_rows, ignore_index=True)
        print(f"‚úÖ –ü–∞–∫–µ—Ç 1 –æ–±—ä–µ–¥–∏–Ω—ë–Ω ‚Äî {len(merged_df)} —Å—Ç—Ä–æ–∫")
        merged_df.to_csv(OUTPUT_PATH, index=False)
        print(f"üéØ –°–º–µ—Ä–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {OUTPUT_PATH}")
    else:
        print(
            "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏. –ü—Ä–æ–≤–µ—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ symbol –∏ year."
        )


if __name__ == "__main__":
    merge_with_labels()
