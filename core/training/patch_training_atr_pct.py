# -*- coding: utf-8 -*-
"""
patch_training_atr_pct.py
–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ atr_pct –≤ training_data.json, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç,
–∏—Å–ø–æ–ª—å–∑—É—è atr –∏ —Ü–µ–Ω—É (entry_price/price/close) -> atr_pct = atr/price*100
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∏ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ñ–∞–π–ª.
"""
import json
from pathlib import Path

DATA_PATH = Path("core/trading/training_data.json")
BACKUP_PATH = Path("core/trading/training_data.backup.before_atr_pct.json")

PRICE_KEYS = ["entry_price", "price", "close", "close_at_entry"]


def get_price(row):
    for k in PRICE_KEYS:
        v = row.get(k)
        try:
            if v is not None and float(v) > 0:
                return float(v)
        except Exception:
            pass
    return None


def to_float(x):
    try:
        return float(x)
    except Exception:
        return None


def main():
    if not DATA_PATH.exists():
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω {DATA_PATH}")
        return
    data = json.loads(DATA_PATH.read_text())
    if not isinstance(data, list) or not data:
        print("‚ùå training_data.json –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å–ø–∏—Å–æ–∫.")
        return

    # –±—ç–∫–∞–ø
    try:
        if not BACKUP_PATH.exists():
            BACKUP_PATH.write_text(json.dumps(data, ensure_ascii=False, indent=2))
            print(f"üîí Backup: {BACKUP_PATH}")
    except Exception as e:
        print(f"[WARN] Backup error: {e}")

    updated = 0
    unchanged = 0
    skipped = 0

    for row in data:
        if "atr_pct" in row and row.get("atr_pct") is not None:
            unchanged += 1
            continue
        atr = to_float(row.get("atr") or row.get("atr_value"))
        price = get_price(row)
        if atr is None or price is None or price <= 0:
            skipped += 1
            continue
        atr_pct = (atr / price) * 100.0
        row["atr_pct"] = round(atr_pct, 4)
        updated += 1

    DATA_PATH.write_text(json.dumps(data, ensure_ascii=False, indent=2))
    print(
        f"‚úÖ –ì–æ—Ç–æ–≤–æ. –î–æ–±–∞–≤–ª–µ–Ω–æ atr_pct: {updated}, –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {unchanged}, –ø—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}"
    )
    print(f"‚Ü™Ô∏è –§–∞–π–ª –æ–±–Ω–æ–≤–ª—ë–Ω: {DATA_PATH}")


if __name__ == "__main__":
    main()
